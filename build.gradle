/*
 * This file was generated by the Gradle 'init' task.
 */

plugins {
    id 'org.springframework.boot' version '2.5.5'
    id 'io.spring.dependency-management' version '1.0.11.RELEASE'
    id 'java'
    id 'maven-publish'
}

repositories {
    mavenCentral()
}

dependencies {
    implementation 'org.springframework.boot:spring-boot-starter-data-elasticsearch'
    implementation 'co.elastic.logging:logback-ecs-encoder:0.5.2'
    implementation 'co.elastic.apm:apm-agent-attach:1.19.0'
    implementation 'javax.xml.bind:jaxb-api:2.3.0'
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa:1.5.2.RELEASE'
    implementation 'org.springframework.boot:spring-boot-starter-data-rest:1.5.2.RELEASE'
    implementation 'org.springframework.boot:spring-boot-starter-web:1.5.2.RELEASE'
    runtimeOnly 'com.h2database:h2:1.4.193'
    testImplementation 'org.springframework.boot:spring-boot-starter-test:1.5.2.RELEASE'

    implementation 'org.springframework.boot:spring-boot-starter-data-elasticsearch'
    compileOnly 'org.projectlombok:lombok'
    annotationProcessor 'org.projectlombok:lombok'
    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation 'org.springframework.boot:spring-boot-starter-thymeleaf'
    implementation 'org.springframework.boot:spring-boot-starter-oauth2-client'
    implementation 'co.elastic.logging:logback-ecs-encoder:0.5.2'
    implementation 'co.elastic.apm:apm-agent-attach:1.19.0'
    testImplementation 'org.springframework.boot:spring-boot-starter-test'

    developmentOnly 'org.springframework.boot:spring-boot-devtools'

    testImplementation('org.springframework.boot:spring-boot-starter-test') {
        exclude group: 'org.junit.vintage', module: 'junit-vintage-engine'
    }
}

group = 'com.techprimers.elastic'
version = '0.0.1-SNAPSHOT'
description = 'spring-elastic-demo'
java.sourceCompatibility = JavaVersion.VERSION_1_8

publishing {
    publications {
        maven(MavenPublication) {
            from(components.java)
        }
    }
}

tasks.withType(JavaCompile) {
    options.encoding = 'UTF-8'
}
